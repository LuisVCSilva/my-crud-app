#DO NOT EDIT THIS FILE

from flask import Flask, render_template, request, session, url_for, make_response, redirect

from flask_sqlalchemy import SQLAlchemy
from datetime import datetime
from core_app import *
from modules.apps.show import show
from modules.apps.help import help
from modules.apps.get_session import get_session
from modules.apps.list_files import list_files
from modules.apps.integrate import integrate
from modules.apps.derivative import derivative
from modules.apps.taylor_series import taylor_series
from modules.apps.eigenvector import eigenvector
from modules.apps.login import login
from modules.apps.simplify import simplify
from modules.apps.about import about
from modules.apps.template import template
from modules.apps.solve import solve
from modules.apps.eigenvalue import eigenvalue
from modules.apps.signup import signup
from modules.apps.credits import credits
from modules.apps.clear import clear
from modules.apps.critical_points import critical_points
from modules.apps.is_odd import is_odd
from modules.apps.logout import logout
#from modules.equations.kinematics_equation import kinematics_equation

app = Flask(__name__,template_folder="templates",static_folder="static")
app.secret_key = '123'
app.register_blueprint(core_app)
app.register_blueprint(help)
app.register_blueprint(show)
app.register_blueprint(get_session)
app.register_blueprint(list_files)
app.register_blueprint(integrate)
app.register_blueprint(derivative)
app.register_blueprint(taylor_series)
app.register_blueprint(eigenvector)
app.register_blueprint(login)
app.register_blueprint(simplify)
app.register_blueprint(about)
app.register_blueprint(template)
app.register_blueprint(solve)
app.register_blueprint(eigenvalue)
app.register_blueprint(signup)
app.register_blueprint(credits)
app.register_blueprint(clear)
app.register_blueprint(critical_points)
app.register_blueprint(is_odd)
app.register_blueprint(logout)
#app.register_blueprint(kinematics_equation)

# Function to list all routes
@app.route('/list_apps',methods=["GET"])
def list_apps():
    routes = []
    for rule in app.url_map.iter_rules():
        routes.append({
            'endpoint': rule.endpoint,
            'methods': ','.join(rule.methods),
            'path': rule.rule
        })
    routes = [route for route in routes if "/apps/" in route["path"]]
    return routes


'''
if __name__ == '__main__':
   app.run(host='localhost', port=5000, debug=True)
   app.config['SESSION_TYPE'] = 'filesystem'
   app.config['SECRET_KEY'] = 'secret-key-goes-here'
   app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///db.sqlite'
   session.init_app(app)
   #db.create_all(app=app)
   #db.init_app(app)
   #db.create_all()
   #app.config.from_pyfile('settings.py')
   app.debug = True
   app.run()
'''

# Runner and Debugger
if __name__ == "__main__":
    app.run(debug=True)

